---

- hosts: all
  any_errors_fatal: true
  gather_facts: true
  vars:
    git_repo_url: 'https://github.com/jan100design/ansible.git'
    git_dest: '~{{ ansible_user|default("root") }}/git_checkout'
    git_branch: 'main'
    target_script: 'show_dirs.py'
    git_pull: true
    ansible_python_interpreter: '/usr/bin/python3'
  tasks:

    - name: "Git Install"
      package:
        name: git
        state: present
      become: true

    - name: "Create depend dir"
      file:
        path: "{{ git_dest }}"
        state: "directory"
        recurse: false
        force: false
        follow: true
        mode: "u=rwx,g=r,o=r"
        owner: "{{ ansible_user|default('root') }}"

    - name: "Clone Git repo {{ git_repo_url }}"
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ git_dest }}"
        version: "{{ git_branch }}"
        clone: true
        update: true
        force: true
      environment:
        GIT_SSL_NO_VERIFY: 'true'
      when: '( 
           ( git_pull is defined )
       and ( git_pull|bool )
          )'

    - name: "Find the Python script"
      find:
        paths: "{{ git_dest }}"
        patterns: '{{ target_script }}'
        recurse: true
      register: found_files

    - name: "Display found files"
      debug:
        msg: "Found file: {{ CurrentFile.path }}"
      loop: "{{ found_files.files | ternary(found_files.files, []) }}"
      loop_control:
        loop_var: CurrentFile
        label: "Work with file {{ CurrentFile.path }}"

    - name: "Step3. Check if Python interpreter exists"
      command: which {{ ansible_python_interpreter }}
      register: python_check
      ignore_errors: true

    - name: "Fail if Python interpreter isn't found"
      fail:
        msg: "Python interpreter not found at {{ ansible_python_interpreter }}"
      when: python_check.rc != 0

    - name: "Run Script"
      command: "{{ ansible_python_interpreter }} {{ found_files.files[0]['path'] }}"
      register: script_output
      changed_when: false
      ignore_errors: true
      when:
        - found_files.matched > 0
        - python_check.rc == 0

    - name: "Display output"
      debug:
        msg: "{{ script_output.stdout }}"
      when: '( script_output is success )'
